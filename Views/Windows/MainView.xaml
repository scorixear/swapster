<Window x:Class="Swapster.Views.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Swapster.Views"
        xmlns:vm="clr-namespace:Swapster.ViewModels;assembly=ViewModels"
        mc:Ignorable="d"
        Title="Swapster" Height="800" Width="1200"
        Background="{StaticResource bonjwaBackground}"
        WindowStyle="SingleBorderWindow" Loaded="WindowLoaded">
    <Window.DataContext>
        <vm:MainViewModel/>
    </Window.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/> <!--Row for Main Program Lists-->
            <RowDefinition Height="Auto"/> <!--Row for Controlbuttons-->
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/> <!-- Column for List of Non-Selected Processes -->
            <ColumnDefinition Width="150px"/> <!-- Column for Selected and Deselecting Processes -->
            <ColumnDefinition/> <!-- Column for List of Selected Processes -->
        </Grid.ColumnDefinitions>

        <local:ErrorPopup VerticalAlignment="Stretch" 
                          HorizontalAlignment="Stretch" 
                          Grid.ColumnSpan="3" 
                          Grid.RowSpan="2" 
                          Title="{Binding ErrorTitle}"
                          Error="{Binding ErrorMessage}"
                          OkClick="{Binding OkClickCommand}"
                          Panel.ZIndex="10">
            <local:ErrorPopup.Style>
                <Style TargetType="{x:Type local:ErrorPopup}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ShowError, Mode=OneWay}" Value="true">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ShowError, Mode=OneWay}" Value="false">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </local:ErrorPopup.Style>
        </local:ErrorPopup>


        <!--#region Non-Selected Processes -->
        <Grid Background="Transparent"
              Margin="10,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="20"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            
            <!--Represents the Header above the List-->
            <!--Margin Moves Header above Border-->
            <!--Panel.ZIndex assures that Header is Shown above the Border-->
            <TextBlock Height ="20px"
                       Text="Erkannte Programme" 
                       Width="Auto"
                       Background="{StaticResource bonjwaBackground}" 
                       Foreground="White" 
                       Margin="0,15,0,0"
                       Panel.ZIndex="1"
                       Padding="0,0,5,0"
                       Grid.RowSpan="2" 
                       VerticalAlignment="Top"
                       HorizontalAlignment="Left"/>
            <!--Green Border around the List-->
            <Border Grid.Row="1"
                    BorderBrush="{StaticResource bonjwaBorder}"
                    BorderThickness="5"
                    Panel.ZIndex="0"
                    CornerRadius="3">
                <!--The actual List of Non-Selected Processes-->
                <!--Margin ensures that the Header doesn't overlap the top-most item -->
                <ListView Grid.Row="0" Grid.Column="0"
                          Background="Transparent"
                          BorderBrush="Transparent"
                          ItemsSource="{Binding Processes, Mode=OneWay}"
                          SelectedItem="{Binding SelectedNewProcess}"
                          Margin="0,10,0,0">
                    <ListView.Resources>
                        <Style x:Name="BonjwaScrollBar"  TargetType="{x:Type ScrollBar}">
                            <Setter Property="Background" Value="{StaticResource bonjwaBackground}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource bonjwaBackground}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ScrollBar">
                                        <Grid x:Name="Bg" SnapsToDevicePixels="True">
                                            <Grid.RowDefinitions>
                                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                <RowDefinition Height="0.00001*"/>
                                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                            </Grid.RowDefinitions>
                                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    Background="{TemplateBinding Background}"
                                                    Grid.Row="1"
                                                    CornerRadius="10"/>
                                            <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                                <Track.DecreaseRepeatButton>
                                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}" HorizontalAlignment="Left" Width="17"/>
                                                </Track.DecreaseRepeatButton>
                                                <Track.IncreaseRepeatButton>
                                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                                </Track.IncreaseRepeatButton>
                                                <Track.Thumb>
                                                    <Thumb Style="{StaticResource ScrollBarThumbVertical}" Margin="2"/>
                                                </Track.Thumb>
                                            </Track>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.Resources>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Label Foreground="White" Content="{Binding Name}"/>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Border>
        </Grid>
        <!--#endregion Non-Selected Processes-->
        
        <!--The button to refresh all process lists-->
        <!--The buttons content is displayed as "Icon Text" taken from Resources/Icons.xaml-->
        <Button Grid.Column="0" Grid.Row="1" Height="40px" Style="{StaticResource BonjwaButton15}"
                Click="Refresh_Click">
            <Button.Content>
                <StackPanel Orientation="Horizontal">
                    <Image Source="{StaticResource refresh_icon}" Width="15px"/>
                    <Label Content="Refresh" Foreground="White"/>
                </StackPanel>
            </Button.Content>
        </Button>
        
        <!--#region Process Selection-->
        <!--The section for selecting and deselecting processes-->
        <StackPanel Grid.Column="1" VerticalAlignment="Center" Margin="5,0">
            <!--Button for selecting processes to be cycled around-->
            <Button Style="{StaticResource BonjwaButton0}" Click="SelectProcess_Click">
                <Button.Content>
                    <Image Margin="0,5" Source="{StaticResource select_icon}" Width="15"/>
                </Button.Content>
            </Button>
            <!--Button for deselecting processes to be not cycled around-->
            <Button Style="{StaticResource BonjwaButton0}" Margin="0,5" Click="DeselectProcess_Click">
                <Button.Content>
                    <Image Margin="0,5" Source="{StaticResource deselect_icon}" Width="15"/>
                </Button.Content>
            </Button>
            <!--Label for inputing the Timer length-->
            <Label Content="Timer (in Sek.)" Foreground="White" HorizontalContentAlignment="Center"/>
            <Border BorderBrush="{StaticResource bonjwaGreen}"
                    BorderThickness="2">
                <!--Input Box for actually writing the length in-->
                <TextBox Text="{Binding TimerLength, Mode=TwoWay}" d:Text="60" Height="20"
                         Foreground="White"
                         TextAlignment="Center"
                         VerticalContentAlignment="Center"
                         BorderBrush="Transparent"
                         BorderThickness="0"
                         Background="Transparent"
                         SelectionBrush="White"
                         CaretBrush="White">
                </TextBox>
            </Border>
            <Label Content="Methode"
                   Foreground="White"
                   HorizontalAlignment="Center"
                   Margin="0, 10, 0, 0"/>
            <ComboBox Style="{DynamicResource BonjwaComboBox}" SelectedValue="{Binding SelectedSwitchMethod}">
                <ComboBoxItem Content="AppActivate" IsSelected="True"/>
                <ComboBoxItem Content="SetForeground"/>
                <ComboBoxItem Content="SwitchTo"/>
            </ComboBox>
            <Label Content="Ton abspielen"
                   Foreground="White"
                   HorizontalAlignment="Center"
                   Margin="0, 10, 0, 0"/>
            <CheckBox IsChecked="{Binding SoundChecked}"
                      HorizontalAlignment="Center"/>
        </StackPanel>
        
        <!--Section for the Selected Processes-->
        <Grid Grid.Column="2" Background="Transparent" Margin="10,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="20"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            
            <!--Header for the SelectedProcesses List-->
            <TextBlock Height ="20px"
               Width="Auto"
               Background="{StaticResource bonjwaBackground}" 
               Foreground="White" 
               Text="Ausgewählte Programme" 
               Margin="0,15,0,0"
               Padding="0,0,5,0"
               Grid.RowSpan="2" 
               Panel.ZIndex="1"
               VerticalAlignment="Top"
               HorizontalAlignment="Left"/>
            <!--Border around SelectedProcesses List-->
            <Border Grid.Row="1"
                    BorderBrush="{StaticResource bonjwaBorder}"
                    BorderThickness="5"
                    Panel.ZIndex="0"
                    CornerRadius="3">
                <!--Actual SelectedProcesses List-->
                <ListView Background="Transparent" BorderBrush="Transparent"
                            ItemsSource="{Binding SelectedProcesses}"
                            SelectedItem="{Binding SelectedActiveProcess}"
                          Margin="0,10,0,0">
                    <ListView.Resources>
                        <Style x:Name="BonjwaScrollBar1"  TargetType="{x:Type ScrollBar}">
                            <Setter Property="Background" Value="{StaticResource bonjwaBackground}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource bonjwaBackground}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ScrollBar">
                                        <Grid x:Name="Bg" SnapsToDevicePixels="True">
                                            <Grid.RowDefinitions>
                                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                <RowDefinition Height="0.00001*"/>
                                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                            </Grid.RowDefinitions>
                                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Grid.Row="1"
                                CornerRadius="10"/>
                                            <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                                <Track.DecreaseRepeatButton>
                                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}" HorizontalAlignment="Left" Width="17"/>
                                                </Track.DecreaseRepeatButton>
                                                <Track.IncreaseRepeatButton>
                                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                                </Track.IncreaseRepeatButton>
                                                <Track.Thumb>
                                                    <Thumb Style="{StaticResource ScrollBarThumbVertical}" Margin="2"/>
                                                </Track.Thumb>
                                            </Track>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.Resources>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Label Foreground="White" Content="{Binding Name}"/>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Border>
        </Grid>
        
        <!--Label showing how much time until next switch-->
        <Label Grid.Column="1" Grid.Row="1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
            <TextBlock Grid.Column="1" Grid.Row="1"
           Text="{Binding TimerCountdown}"
           Foreground="White"
           TextWrapping="Wrap"
           TextAlignment="Center" />
        </Label>
        
        <!--Button for Starting / Stopping the Switch Timer-->
        <Button Grid.Column="2" Grid.Row="1" Style="{StaticResource BonjwaButton15}" Click="StartStop_Click">
            <Button.Content>
                <StackPanel Orientation="Horizontal">
                    <Image Width="15">
                        <Image.Style>
                            <Style TargetType="Image">
                                <!--Trigger changes the Icon of the Button depending on if the Timer is running or not-->
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsRunning}" Value="False">
                                        <Setter Property="Source" Value="{StaticResource start_icon}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsRunning}" Value="True">
                                        <Setter Property="Source" Value="{StaticResource stop_icon}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <Label Content="{Binding RunningState}" Foreground="White"/>
                </StackPanel>
            </Button.Content>
        </Button>

    </Grid>
</Window>
